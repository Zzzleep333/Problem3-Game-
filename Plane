package Models;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

public class Plane extends Model {
    private final static String PATH_TO_ANIMATION = "Plane\\";
    private final static int VERTICAL_SPEED =3;//vertical speed of plane
    private final static int HORIZONTAL_SPEED =  3;//horizontal speed of plane
    private final ArrayList <ImageIcon> PlaneAnim = new ArrayList<ImageIcon>();
    private int current_plane = -1;
    private boolean can_damaged = true;
    private int live = 1;
    private boolean Visible = true;
    private boolean shooting = false;

    public void movePlane(char direction){//////
        switch(direction){
            case('w'):
                 movePlane(0,-VERTICAL_SPEED);
                getSignal();
                break;
            case('d'):
                movePlane(HORIZONTAL_SPEED,0);
                getSignal();
                break;
            case('s'):
                movePlane(0,VERTICAL_SPEED);
                getSignal();
                break;
            case('a'):
                movePlane(-HORIZONTAL_SPEED,0);
                getSignal();
                break;
        }
    }

    void createPlane(int Start_x, int Start_y, ArrayList <String> ImgNames){//////
        for(String path: ImgNames){
            addImg(path);
        }
        X = Start_x;
        Y = Start_y;
        getSignal();
    }

    public Plane(){//////
        ArrayList<String> anim = new ArrayList<String>();
        for(char i = '1'; i < '7';i++){
            anim.add(PATH_TO_ANIMATION + "p"+Character.toString(i) + ".png");
        }
        this.createPlane(10,250,anim);
    }

    public Plane(int Start_x,int Start_y){//////
        ArrayList<String> anim = new ArrayList<String>();
        for(char i = '1'; i < '7';i++){
            anim.add(PATH_TO_ANIMATION +"p" +Character.toString(i) + ".png");
        }
        this.createPlane(Start_x,Start_y,anim);
    }

    public void setCan_damaged(boolean can_damaged) {///////
        this.can_damaged = can_damaged;
    }
    public boolean getDamage(){////////
        live--;
        if(live == 0){
            setVisible(false);
            getSignal();
            return true;
        }
        else{
            setVisible(false);
            setCan_damaged(false);
            getSignal();
            return false;
        }
    }
    public void addImg(String ImgName){//Здесь в анимацию должна добавляться картинка
        this.PlaneAnim.add( new ImageIcon(ImgName));
    }
    public Image getImg() {//должен возвращать следующую картинку
            if (!shooting) {
                current_plane = (current_plane + 1) % 3;
            } else {
                current_plane = 3 + (current_plane + 1) % 3;
            }
        return PlaneAnim.get(current_plane).getImage();
    }
    public void movePlane(int X, int Y) {
        this.X+=X;
        this.Y+=Y;
    }
    public boolean isVisible() {
        return Visible;
    }
    public void setVisible(boolean Visible) {
        this.Visible = Visible;
    }
    public int getHeight(){
        return PlaneAnim.get(0).getIconHeight();
    }
    public int getWidth(){
        return PlaneAnim.get(0).getIconWidth();
    }
    public void setShooting(boolean s){
        shooting = s;
    }
}
