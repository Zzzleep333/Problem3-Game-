package View;

import Models.*;
import Controller.Controller;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class Drawer extends View {


    //    static JFrame getPreGame(){//Здесь должно быть меню
//
//    }
    public Drawer(String s){
        super(s);
    }
    public static JFrame getPicture(){
        Drawer game = new Drawer("game");
        game.setBounds(200,200,1000,480);
        game.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        Games_panel panel = new Games_panel();
        panel.CreateAnim();
        game.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);
                if(e.getKeyCode() == KeyEvent.VK_A){
                Controller.movePlane("a");
                     }
                if(e.getKeyCode() == KeyEvent.VK_S){
                    Controller.movePlane("s");
                        }
                if(e.getKeyCode() == KeyEvent.VK_D){
                    Controller.movePlane("d");
                }
                if(e.getKeyCode() == KeyEvent.VK_W){
                    Controller.movePlane("w");
                }
                if(e.getKeyCode() == KeyEvent.VK_SPACE){
                    Controller.Shoot();
                }
            }
        });
        Timer timer = new Timer(150, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(GO< Universe.getModels().size()){
                    for(Model model:Universe.getModels()){
                        model.subscribe(game);
                    }
                }
            }
        });
        timer.start();
        game.add(panel);
        panel.setVisible(true);
        game.setVisible(true);
        return game;
    }
//    static JFrame getPastGame(String name_of_file,int mode){//Здесь будет отображаться таблица с результатами, mode пределяет надо ли записать новый рекорд
//    }


}

